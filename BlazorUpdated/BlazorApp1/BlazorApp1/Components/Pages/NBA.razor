@page "/NBA"
@rendermode InteractiveServer
@inherits LayoutComponentBase
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize]
@using Microsoft.AspNetCore.Components.QuickGrid
@using System.Data
@using System.Data.OleDb
@using System.Linq

<h3>NBA
    <svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="currentColor" class="bi bi-dribbble" viewBox="0 0 20 20">
        <path fill-rule="evenodd" d="M8 0C3.584 0 0 3.584 0 8s3.584 8 8 8c4.408 0 8-3.584 8-8s-3.592-8-8-8m5.284 3.688a6.8 6.8 0 0 1 1.545 4.251c-.226-.043-2.482-.503-4.755-.217-.052-.112-.096-.234-.148-.355-.139-.33-.295-.668-.451-.99 2.516-1.023 3.662-2.498 3.81-2.69zM8 1.18c1.735 0 3.323.65 4.53 1.718-.122.174-1.155 1.553-3.584 2.464-1.12-2.056-2.36-3.74-2.551-4A7 7 0 0 1 8 1.18m-2.907.642A43 43 0 0 1 7.627 5.77c-3.193.85-6.013.833-6.317.833a6.87 6.87 0 0 1 3.783-4.78zM1.163 8.01V7.8c.295.01 3.61.053 7.02-.971.199.381.381.772.555 1.162l-.27.078c-3.522 1.137-5.396 4.243-5.553 4.504a6.82 6.82 0 0 1-1.752-4.564zM8 14.837a6.8 6.8 0 0 1-4.19-1.44c.12-.252 1.509-2.924 5.361-4.269.018-.009.026-.009.044-.017a28.3 28.3 0 0 1 1.457 5.18A6.7 6.7 0 0 1 8 14.837m3.81-1.171c-.07-.417-.435-2.412-1.328-4.868 2.143-.338 4.017.217 4.251.295a6.77 6.77 0 0 1-2.924 4.573z" />
    </svg>
</h3>
<ul class="nav nav-tabs ">
    @*This is a list, that is styled to look like tabs. Each item has a click event that updates the table property by changing the string text*@
    <li class="nav-item">
        <a class="nav-link active" @onclick='() => Navigate("NBAPlayerStats2023Updated")'>PlayerStats</a>
    </li>
    <li class="nav-item">
        <a class="nav-link active" @onclick='() => Navigate("NBASchedule2023Updated")'>Schedule</a>
    </li>
    <li class="nav-item">
        <a class="nav-link active" @onclick='() => Navigate("NBAStandings2023Updated")'>Standings</a>
    </li>
    <li class="nav-item">
        <a class="nav-link active" @onclick='() => Navigate("NBATeamStats2023Updated")'>TeamStats</a>
    </li>
  

</ul>
<div style="max-height:500px; overflow:scroll;">
    @*Put table in a div so it would have scrollbars*@

    <table class="table table-dark table-striped table-hover table-responsive">

        <thead class="sticky-top">
            @*Made the headers sticky so they stap at the top when you scroll*@
            <tr>
                @foreach (DataColumn column in dataTable.Columns)
                {
                    <th>@column.ColumnName</th>
                }
            </tr>
        </thead>

        <tbody>
            @foreach (DataRow row in dataTable.Rows)
            {
                <tr>
                    @foreach (var cell in row.ItemArray)
                    {
                        <td>@cell.ToString()</td>
                    }
                </tr>
            }

        </tbody>
    </table>
</div>


<div class="d-flex gap-2 pt-4">
    @*Inline css because I feel like it*@

    <button class="btn btn-primary" @onclick="SearchTable">Search</button> @*Search Button*@

    <input class="" @bind="searchText" @bind:event="oninput" /> @*Input field used for searching tables*@


    <select class="form-select w-auto me-auto" @bind="column">
        @* A select element (like a dropdown combobox) *@

        <option value="@dataTable.Columns[0].ColumnName"> @dataTable.Columns[0].ColumnName </option> @*Set default value so column updates consistently*@

        @{
            var columnList = dataTable.Columns.Cast<DataColumn>(); //Cast columns so I can use the skip function
        }

        @foreach (DataColumn column in columnList.Skip(1)) @*First item is duplicate of default value, so skip it*@
        {
            <option> @column.ColumnName </option>
        }

    </select>


    <button class="btn btn-secondary" @onclick="ClearAndReset">Clear </button> @*Clear Button*@

    <button class="btn btn-danger">Exit</button>

</div>

@*Test elemets*@
@* <p>Search Text: @searchText </p>
<p>Selected Column: @column</p>
 *@




@code {

    Sport Basketball; //Initialize our class

    //Our class needs a connection string, and a table name to work
    private readonly string connectionString = @"Provider=Microsoft.ACE.OLEDB.12.0;Data Source=NBADatabase.accdb";
    string defaultTable = "NBAPlayerStats2023Updated";

    //Initialize variables
    DataTable dataTable;
    string column = "";
    string searchText = "";
    const string allColumns = "";


    protected override void OnInitialized()  //On the page load, it calls the search method with default values

    {
        Basketball = new Sport(connectionString, defaultTable);
        SearchTable();
        column = dataTable.Columns[0].ColumnName; //Set column (select element) to first option
    }

    private void Navigate(string newTable) //The navigation tabs (which are just list items) call this method on click

    {
        Basketball.Table = newTable;
        ClearAndReset();
    }

    private void ClearAndReset()
    {
        searchText = "";
        dataTable = Basketball.Search(allColumns, searchText); //If column is blank, search query performs a 'select all' statement
        column = dataTable.Columns[0].ColumnName; //Set column (select element) to first option
    }

    private void SearchTable()
    {
        dataTable = Basketball.Search(column, searchText); //Class search method returns a new datatable filled with results
    }
    
}
<AuthorizeView>
    @context.User.Identity?.Name!
</AuthorizeView>
