@page "/NFL"
@rendermode InteractiveServer
@using Microsoft.AspNetCore.Components.QuickGrid
@using System.Data
@using System.Data.OleDb
@using System.Linq
<h1>NFL</h1>


<ul class="nav nav-tabs"> @*This is a list, that is styled to look like tabs. Each item has a click event that updates the table property by changing the string text*@
    <li class="nav-item">
        <a class="nav-link active" @onclick='() => Navigate("NFLStandings2023")'>Standings</a>
    </li>
    <li class="nav-item">
        <a class="nav-link active" @onclick='() => Navigate("NFLTeamStatsOffense2023")'>Team Offense</a>
    </li>
    <li class="nav-item">
        <a class="nav-link active" @onclick='() => Navigate("NFLTeamStatsDefensive2023")'>Team Defense</a>
    </li>
    <li class="nav-item">
        <a class="nav-link active" @onclick='() => Navigate("NFLRushingStats2023")'>Rushing</a>
    </li>
    <li class="nav-item">
        <a class="nav-link active" @onclick='() => Navigate("NFLPassingStats2023")'>Passing</a>
    </li>
    <li class="nav-item">
        <a class="nav-link active" @onclick='() => Navigate("NFLReceivingStats2023")'>Recieving</a>
    </li>
    <li class="nav-item">
        <a class="nav-link active" @onclick='() => Navigate("NFLDefensiveStats2023")'>Defense</a>
    </li>

</ul>


<table class="table table-dark table-striped table-hover" > @*Table that gets values by looping through a generated DataTable*@
    <thead>
        <tr>
            @foreach (DataColumn column in dataTable.Columns)
            {
                <th>@column.ColumnName</th>
            }
        </tr>
    </thead>
    <tbody>
        @foreach (DataRow row in dataTable.Rows)
        {
            <tr>
                @foreach (var cell in row.ItemArray)
                {
                    <td>@cell.ToString()</td>
                }
            </tr>
        }

    </tbody>
</table>



<button class="btn btn-primary" @onclick="SearchTable">Search</button> @*Search Button*@

<input @bind="searchText" @bind:event="oninput" /> @*Input field used for searching tables*@



<div class="d-grid gap-2 d-md-flex justify-content-md-end">

    <button class="btn btn-secondary" @onclick="ClearTable"  >Clear </button> @*Clear Button*@

    <button class="btn btn-danger">Exit</button>

</div>



<select class="form-select" @bind="column"> @* A select element (like a dropdown combobox) *@

    <option value="@dataTable.Columns[0].ColumnName" > @dataTable.Columns[0].ColumnName </option> @*Set default value so column updates consistently*@

    @{
        var columnList = dataTable.Columns.Cast<DataColumn>(); //Cast columns so I can use the skip function
    }

    @foreach(DataColumn column in columnList.Skip(1) ) @*First item is duplicate of default value, so skip it*@
    {
        <option> @column.ColumnName </option>
    }

</select>




<p>Search Text: @searchText </p> @*Test elemets*@
<p>Selected Column: @column</p>





@code {
    Sport Football; //Initialize our class

    //Declare variables
    private readonly string connectionString = @"Provider=Microsoft.ACE.OLEDB.12.0;Data Source=DatabaseNFL.accdb";
    string defaultTable = "NFLStandings2023"; 

    DataTable dataTable;
    string column = "";
    string searchText = "";
    const string allColumns = "";


    //On the page load, it calls the search method with default values
    protected override void OnInitialized()
    {
        Football = new Sport(connectionString, defaultTable);
        SearchTable();
        column = dataTable.Columns[0].ColumnName; //Set column (select element) to first option
    }

    //The navigation tabs (which are just list items) call this method on click
    private void Navigate(string newTable)
    {
        Football.Table = newTable;
        ClearTable();
    }

    private void ClearTable()
    {
        searchText = "";
        dataTable = Football.Search(allColumns, searchText); //If column is blank, search query performs a "SELECT *" statement
        column = dataTable.Columns[0].ColumnName.ToString(); //Reset column to first option of table
    }

    private void SearchTable()
    {
        dataTable = Football.Search(column, searchText);
    }
}
